(require 'package) ;; You might already have this line

(setq package-archives '(("gnu" . "https://elpa.gnu.org/packages/")
                     ("marmalade" . "https://marmalade-repo.org/packages/")))

(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (url (concat (if no-ssl "https" "https") "://melpa.org/packages/")))
  (add-to-list 'package-archives (cons "melpa" url) t))

(package-initialize) ;; You might already have this line

(let ((default-directory "~/.emacs.d./packages/"))
  (normal-top-level-add-subdirs-to-load-path))

(autoload 'c++-mode   "cc-mode"    "Major mode for editing C++." t)
(autoload 'slint      "slint"      "Run slint on the current file." t)

;; Mouse wheel support
(defun mousewheel-scroll-up (event)
  "Scroll window under mouse up by five lines."
  (interactive "e")
  (let ((current-window (selected-window)))
    (unwind-protect
        (progn 
          (select-window (posn-window (event-start event)))
          (scroll-up 5))
      (select-window current-window))))

(defun mousewheel-scroll-down (event)
  "Scroll window under mouse down by five lines."
  (interactive "e")
  (let ((current-window (selected-window)))
    (unwind-protect
        (progn 
          (select-window (posn-window (event-start event)))
          (scroll-down 5))
      (select-window current-window))))

(global-set-key (kbd "<mouse-5>") 'mousewheel-scroll-up)
(global-set-key (kbd "<mouse-4>") 'mousewheel-scroll-down)

(setq-default indent-tabs-mode nil)
   (add-hook 'makefile-mode-hook (lambda () (setq indent-tabs-mode t)))

;; Show column and line numbers
(setq column-number-mode t)
(setq line-number-mode t)

(defun my-c-mode-common-hook ()
 ;; my customizations for all of c-mode, c++-mode, objc-mode, java-mode
 (c-set-offset 'substatement-open 0)
 ;; other customizations can go here

 (setq c++-tab-always-indent t)
 (setq c-basic-offset 4)                  ;; Default is 2
 (setq c-indent-level 4)                  ;; Default is 2

 (setq tab-width 4)
 (setq indent-tabs-mode nil)  ; use spaces only if nil
 (show-paren-mode 1)
)

(add-hook 'c-mode-common-hook 'my-c-mode-common-hook)

(turn-on-font-lock)
(c-set-offset 'case-label '+)
(setq c-tab-always-indent nil)
(setq compile-command "make ")
                                        
(add-hook 'c-mode-common-hook 'turn-on-font-lock)

;; my changes begin **********************

(setq require-final-newline t)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(column-number-mode t)
 '(custom-safe-themes
   (quote
    ("d677ef584c6dfc0697901a44b885cc18e206f05114c8a3b7fde674fce6180879" "8aebf25556399b58091e533e455dd50a6a9cba958cc4ebb0aab175863c25b9a4" default)))
 '(helm-mode t)
 '(inhibit-startup-screen t)
 '(package-selected-packages
   (quote
    (ace-window solarized-theme color-theme powerline helm)))
 '(show-paren-mode t)
 '(tool-bar-mode nil))

(defun scroll-up-one-line()
  (interactive)
  (scroll-up 1))

(defun scroll-down-one-line()
  (interactive)
  (scroll-down 1))

(defun delete-horizontal-space-forward () 
      "*Delete all spaces and tabs after point."
      (interactive "*")
      (delete-region (point) (progn (skip-chars-forward " \t") (point))))

(global-set-key [?\C-{] 'delete-horizontal-space-forward)

(setq scroll-preserve-screen-position t)

;; LINE NUMBERING
(require 'linum)
(global-linum-mode 1)

(tool-bar-mode -1)
(scroll-bar-mode -1)
(show-paren-mode 1)
(menu-bar-mode 0)
;; disable version control
;; (setq vc-handled-backends nil)

(if (display-graphic-p)
(progn
  (global-set-key [?\C-.] 'scroll-down-one-line)
  (global-set-key [?\C-,] 'scroll-up-one-line)
  ;;VERTICAL LINE AT 80
  (require 'fill-column-indicator)
  (setq-default fill-column 80)
  (add-hook 'c-mode-common-hook 'fci-mode)
  (add-hook 'python-mode-common-hook 'fci-mode)
))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

(require 'helm-config)
(global-set-key (kbd "M-x") #'helm-M-x)
(global-set-key (kbd "C-x r b") #'helm-filtered-bookmarks)
(global-set-key (kbd "C-x C-f") #'helm-find-files)
(helm-mode 1)
(helm-autoresize-mode t)
(global-set-key (kbd "M-y") 'helm-show-kill-ring)

;; (require 'powerline)
;; (powerline-default-theme)

(require 'solarized-theme)
(load-theme 'solarized-dark t)
(set-face-attribute 'default nil :family "Consolas" :height 110)


(global-set-key (kbd "M-p") 'ace-window)
